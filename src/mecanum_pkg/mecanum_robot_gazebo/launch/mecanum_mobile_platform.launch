<launch>
  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="headless" default="false"/>
  
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mecanum_robot_gazebo)/worlds/empty.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into ROS parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro  '$(find mecanum_robot_description)/urdf/mecanum_robot/mecanum.urdf.xacro'"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -x 0 -y 0 -z 0  -model mecanum -param robot_description"/>
  
  <!-- Run controller utils -->
  <rosparam file="$(find  mecanum_robot_gazebo)/config/joint_state_controller.yaml" command="load"/>
  <rosparam file="$(find  mecanum_robot_gazebo)/config/mecanum.yaml" command="load"/>

  <!-- ros_control robotis manipulator launch file -->
  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/mecanum" args="joint_state_controller 
                                        wheel_1_controller 
                                        wheel_2_controller 
                                        wheel_3_controller 
                                        wheel_4_controller"/>
                                      
  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/mecanum/joint_states" />
  </node>

  <!-- Publish joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Joystick node -->
  <node name="joy" pkg="joy" type="joy_node"/>


</launch>