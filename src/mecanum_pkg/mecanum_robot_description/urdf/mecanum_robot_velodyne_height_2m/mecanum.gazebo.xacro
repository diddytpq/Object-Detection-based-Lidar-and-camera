<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="laser_visual"  default="false"/>
  <xacro:arg name="camera_visual" default="false"/>
  <xacro:arg name="imu_visual"    default="false"/>


  <xacro:macro name="omni_steering" params="">
  <gazebo reference="base_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2> 
    <kp>1e+13</kp>
    <kd>1.0</kd>
    <material>Gazebo/White</material>
  </gazebo>
  
  <gazebo>
    <plugin name="custom_controller" filename="libcustom_control_plugin.so">
        <commandTopic>/mecanum_vel</commandTopic>
        <odometryTopic>/odom</odometryTopic>
        <odometryFrame>/odom</odometryFrame>
        <odometryRate>20.0</odometryRate>
        <robotBaseFrame>/mecanum/base_link</robotBaseFrame>
    </plugin>
</gazebo>

  
  </xacro:macro>
  
  <xacro:macro name="sensor_gazebo" params="">

    <!-- <gazebo reference="imu_link">
      <gravity>true</gravity>
      <sensor type="imu" name="imu">
        <always_on>true</always_on>
        <visualize>false</visualize>
      </sensor>
    </gazebo>

    <gazebo>
      <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
        <alwaysOn>true</alwaysOn>
        <bodyName>imu_link</bodyName>
        <frameName>imu_link</frameName>
        <topicName>imu</topicName>
        <serviceName>imu_service</serviceName>
        <gaussianNoise>0.0</gaussianNoise>
        <updateRate>0</updateRate>
        <imu>
          <noise>
            <type>gaussian</type>
            <rate>
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </rate>
            <accel>
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </accel>
          </noise>
        </imu>
      </plugin>
    </gazebo> -->

    <gazebo reference="imu_link">
      <gravity>false</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>400</update_rate>
        <visualize>true</visualize>
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>imu/data</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>200.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>


    <gazebo reference="velodyne">
      <sensor type="gpu_ray" name="velodyne-VLP16">      <!-- ray   -->   <!-- gpu_ray -->
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>440</samples>
              <resolution>1</resolution>
              <min_angle>-3.14</min_angle>
              <max_angle>3.14</max_angle>
            </horizontal>
            <vertical>
              <samples>16</samples>
              <resolution>1</resolution>
              <min_angle>-0.26</min_angle>   <!-- 15 -->
              <max_angle> 0.26</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.3</min>
            <max>131</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">     <!-- libgazebo_ros_velodyne_gpu_laser  --> <!-- libgazebo_ros_velodyne_laser  -->
          <topicName>/velodyne_points</topicName>
          <frameName>velodyne</frameName>
          <organize_cloud>false</organize_cloud>
          <min_range>0.9</min_range>
          <max_range>130.0</max_range>
          <gaussianNoise>0.008</gaussianNoise>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="camera">
          <sensor name="mecanum_camera_ir" type="depth">
            <update_rate>0</update_rate>
            <camera>
              <horizontal_fov>1.3439</horizontal_fov>
              <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
              </image>
              <clip>
                <near>0.03</near>
                <far>100</far>
              </clip>
            </camera>
            <plugin name="mecanum_camera_ir_controller" filename="libgazebo_ros_openni_kinect.so">
              <baseline>0.2</baseline>
              <alwaysOn>true</alwaysOn>
              <update_rate>30</update_rate>
              <cameraName>camera</cameraName>
              <imageTopicName>image</imageTopicName>
              <cameraInfoTopicName>camera_info</cameraInfoTopicName>
              <depthImageTopicName>depth/image_raw</depthImageTopicName>
              <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
              <pointCloudTopicName>depth/points</pointCloudTopicName>
              <frameName>camera</frameName>
              <pointCloudCutoff>0.1</pointCloudCutoff>
              <pointCloudCutoffMax>15.0</pointCloudCutoffMax>
              <distortionK1>0.00000001</distortionK1>
              <distortionK2>0.00000001</distortionK2>
              <distortionK3>0.00000001</distortionK3>
              <distortionT1>0.00000001</distortionT1>
              <distortionT2>0.00000001</distortionT2>
              <CxPrime>0</CxPrime>
              <hackBaseline>0</hackBaseline>
            </plugin>
          </sensor>
        </gazebo>

  </xacro:macro> 


</robot>
